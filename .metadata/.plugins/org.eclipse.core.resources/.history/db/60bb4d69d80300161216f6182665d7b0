import xml.etree.ElementTree as et
    

class QuickSort:
    def __init__(self):
        self.array = self.parser()
    
    def qsort(self,left,right):
        if left<right:
            splitPoint = self.partition(left, right) 
            #introduce concurrency here
            self.qsort(left, splitPoint-1)
            self.qsort(splitPoint+1, right)
        
        
    def parser(self):
        #parsing from the XML file
        tree = et.parse("array.xml")
        root = tree.getroot()
        array = []
               
        for child in root:
            array.append(int(child.text))
        
        return array
    
    def swap(self,index1, index2):
        temp = self.array[index1]
        self.array[index1] = self.array[index2]
        self.array[index2] = temp
    
    def partition(self, left, right):
            
        '''taking middle element as pivot
        can also be the first, the last or 
        the median of first, last and middle'''
        
        '''for pivot = array[left]
        leftmark = left+1
        rightmark = right
        
        for pivot = array[right]
        leftmark = left
        rightmark = right - 1
        ''' 
        pivotvalue = self.array[left]
        leftmark = left+1
        rightmark = right

        while True:
            while leftmark <= rightmark and self.array[leftmark] <= pivotvalue:
                leftmark = leftmark + 1
                
            while self.array[rightmark] >= pivotvalue and rightmark >= leftmark:
                rightmark = rightmark -1
                
            if rightmark < leftmark:
                done = True
            else:
                temp = self.array[leftmark]
                self.array[leftmark] = self.array[rightmark]
                self.array[rightmark] = temp

        temp = self.array[left]
        self.array[left] = self.array[rightmark]
        self.array[rightmark] = temp

        return rightmark
                
        
qsort = QuickSort()
print qsort.array
qsort.qsort(0, len(qsort.array)-1)
print qsort.array
       
            
        
        
        
    
    